<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <description>Shiro 配置</description>
    <!-- shiro filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="unauthorizedUrl" value="/hello.htm"/>
        <!--默认跳转-->
        <property name="loginUrl" value="/hello.htm"/>
        <!--
        <property name="successUrl" value="/home.jsp"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        -->
        <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean  -->
        <!-- defined will be automatically acquired and available via its beanName in chain        -->
        <!-- definitions, but you can perform instance overrides or name aliases here if you like: -->
        <!-- <property name="filters">
            <util:map>
                <entry key="anAlias" value-ref="someFilter"/>
            </util:map>
        </property> -->
        <property name="filterChainDefinitions">
            <value>
                <!-- anon表示此地址不需要任何权限即可访问 -->
                /login.jsp = anon
                /user/** = anon
                /register/** = anon
                /unauthorized.jsp = anon
                /css/** = anon
                /js/** = anon
                /checkPswd.htm = anon
                /** = anon
                <!-- roles[manager]表示访问此连接需要用户的角色为manager -->
                /user/add=roles[manager]
            </value>
        </property>
    </bean>

    <!-- shiro securityManager -->
    <bean id="myRealm" class="com.welink.biz.common.security.MyRealm">
        <!--<property name="profileDOMapper" ref="profileDOMapper"></property>-->
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">

        <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
        <property name="realm" ref="myRealm">
        </property>
        <!-- sessionManager -->
        <property name="sessionManager" ref="sessionManager"/>

        <!-- cacheManager -->
        <property name="cacheManager" ref="cacheManager"/>

    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- shiro redisManager -->
    <!--<bean id="redisManager" class="com.welink.biz.common.security.RedisManager">-->
    <!--<property name="host" value="10.168.40.119"/>-->
    <!--<property name="port" value="6379"/>-->
    <!--<property name="expire" value="846000"/>-->
    <!--&lt;!&ndash; optional properties:-->
    <!--<property name="timeout" value="10000"/>-->
    <!--<property name="password" value="123456"/>-->
    <!--&ndash;&gt;-->
    <!--</bean>-->

    <!-- redisSessionDAO -->
    <!--<bean id="redisSessionDAO" class="com.welink.biz.common.security.RedisSessionDAO">-->
    <!--<property name="redisManager" ref="redisManager"/>-->
    <!--</bean>-->

    <!-- sessionManager -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO">
            <bean class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
                <property name="cacheManager" ref="cacheManager"/>
            </bean>
        </property>
        <property name="globalSessionTimeout" value="2592000000"></property>
        <property name="sessionValidationInterval" value="2592000000"/>
    </bean>

    <!-- cacheManager -->
    <!--<bean id="cacheManager" class="com.welink.biz.common.security.RedisCacheManager">-->
    <!--<property name="redisManager" ref="redisManager"/>-->
    <!--</bean>-->

    <bean id="cacheManager" class="com.welink.biz.common.memcached.MemcachedCacheManager">
        <property name="expireSecond" value="2592000"/>
        <property name="memcachedClient" ref="memcachedClient"/>
    </bean>
</beans>