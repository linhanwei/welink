<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

    <aop:aspectj-autoproxy/>
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <!--		解决返回String时乱码-->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="handlerExceptionResolver" class="com.welink.biz.common.AnnotationHandlerMethodExceptionResolver">
        <property name="defaultErrorView" value="error.vm"/>
        <!-- 错误页面 -->
    </bean>

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="favorParameter" value="false"/>
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="mediaTypes">
            <value>
                atom=application/atom+xml
                html=text/html
                json=application/json
                *=*/*
            </value>
        </property>
    </bean>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="5400000"/>
        <property name="uploadTempDir" value="/"/>
    </bean>
    <mvc:default-servlet-handler/>
    <context:annotation-config/>
    <!-- 把标记了@Controller注解的类转换为bean -->
    <context:component-scan base-package="com.welink.web.resource"/>
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>

    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <!--<property name="resourceLoaderPath" value="/WEB-INF/vm/screen/"/>-->
        <property name="configLocation" value="/WEB-INF/velocity.properties"/>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="false"/>
        <property name="prefix" value="/"/>
        <property name="suffix" value=".vm"/>
        <!--<property name="viewClass"-->
        <!--value="org.springframework.web.servlet.view.velocity.VelocityLayoutView" />-->
        <property name="contentType" value="text/html;charset=UTF-8"/>
    </bean>

    <!-- 拦截器 -->
    <mvc:interceptors>
        <!-- 多个拦截器,顺序执行 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!-- 如果不配置或/*,将拦截所有的Controller -->
            <bean class="com.welink.web.common.CommonInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>