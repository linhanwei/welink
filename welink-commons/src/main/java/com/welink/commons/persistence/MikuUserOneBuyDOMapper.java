package com.welink.commons.persistence;

import com.welink.commons.domain.MikuUserOneBuyDO;
import com.welink.commons.domain.MikuUserOneBuyDOExample;

import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.session.RowBounds;
import org.springframework.stereotype.Repository;

@Repository
public interface MikuUserOneBuyDOMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    int countByExample(MikuUserOneBuyDOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    int deleteByExample(MikuUserOneBuyDOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    int insert(MikuUserOneBuyDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    int insertSelective(MikuUserOneBuyDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    List<MikuUserOneBuyDO> selectByExampleWithRowbounds(MikuUserOneBuyDOExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    List<MikuUserOneBuyDO> selectByExample(MikuUserOneBuyDOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    MikuUserOneBuyDO selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    int updateByExampleSelective(@Param("record") MikuUserOneBuyDO record, @Param("example") MikuUserOneBuyDOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    int updateByExample(@Param("record") MikuUserOneBuyDO record, @Param("example") MikuUserOneBuyDOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    int updateByPrimaryKeySelective(MikuUserOneBuyDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table miku_user_one_buy
     *
     * @mbggenerated Tue Dec 29 14:33:44 CST 2015
     */
    int updateByPrimaryKey(MikuUserOneBuyDO record);
    
    /**
     * 
     * sumNumByParams:(统计用户一元购人次). <br/>
     * TODO(这里描述这个方法适用条件 – 可选).<br/>
     *
     * @author LuoGuangChun
     * @param example
     * @return
     */
    Integer sumNumByParams(MikuUserOneBuyDOExample example);
    
    /**
     * 
     * selectRewardUserOneBuy:(查询获奖用户一元购记录). <br/>
     * TODO(这里描述这个方法适用条件 – 可选).<br/>
     *
     * @author LuoGuangChun
     * @param record
     * @return
     */
    MikuUserOneBuyDO selectRewardUserOneBuy(MikuUserOneBuyDO record);
}