<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.welink.commons.persistence.MikuAgencyShareAccountDOMapper" >

	<resultMap id="mikuAgencyShareAccountVOMap" type="com.welink.commons.vo.MikuAgencyShareAccountVO" >
	    <!--
	      WARNING - @mbggenerated
	      This element is automatically generated by MyBatis Generator, do not modify.
	      This element was generated on Wed Nov 04 16:43:00 CST 2015.
	    -->
	    <id column="id" property="id" jdbcType="BIGINT" />
	    <result column="agency_id" property="agencyId" jdbcType="VARCHAR" />
	    <result column="total_share_fee" property="totalShareFee" jdbcType="VARCHAR" />
	    <result column="total_gotpay_fee" property="totalGotpayFee" jdbcType="VARCHAR" />
	    <result column="no_getpay_fee" property="noGetpayFee" jdbcType="VARCHAR" />
	    <result column="getpaying_fee" property="getpayingFee" jdbcType="VARCHAR" />
	    <result column="direct_sales_fee" property="directSalesFee" jdbcType="VARCHAR" />
	    <result column="direct_share_fee" property="directShareFee" jdbcType="VARCHAR" />
	    <result column="indirect_sales_fee" property="indirectSalesFee" jdbcType="VARCHAR" />
	    <result column="indirect_share_fee" property="indirectShareFee" jdbcType="VARCHAR" />
	    <result column="date_created" property="dateCreated" jdbcType="TIMESTAMP" />
	    
	    
	    <result column="is_agency" property="isAgency" jdbcType="TINYINT" /><!-- 是否代理 -->
	    <result column="mobile" property="mobile" jdbcType="VARCHAR" /><!-- 用户电话 -->
	    <result column="profile_pic" property="profilePic" jdbcType="VARCHAR" /><!-- 用户头像 -->
	    <result column="nickname" property="nickName" jdbcType="VARCHAR" />
	    <result column="pTradesCount" property="pTradesCount" jdbcType="BIGINT" /><!-- 订单数 -->
	    <result column="pSalesFee" property="pSalesFee" jdbcType="VARCHAR" /><!-- 销售额 -->
	    <result column="pOfferFee" property="pOfferFee" jdbcType="VARCHAR" /><!-- 贡献分润 -->
	    <result column="contactsLevel" property="contactsLevel" jdbcType="INTEGER" /><!-- 人脉等级 -->
	    
    </resultMap>
	
	<select id="selectAllyByParam" resultMap="mikuAgencyShareAccountVOMap">
		select pro.mobile, IFNULL(pro.nickname, '') as nickname, pro.profile_pic, 
			pro.date_created, pro.is_agency as is_agency,
			asa.id, asa.agency_id, asa.total_share_fee, asa.total_gotpay_fee,
			asa.no_getpay_fee, asa.getpaying_fee, asa.direct_sales_fee, asa.direct_share_fee, 
			asa.indirect_sales_fee, asa.indirect_share_fee,
			case when ua.p_user_id = #{profileId} then 1
						when ua.p2_user_id = #{profileId} then 2
						when ua.p3_user_id = #{profileId} then 3
						when ua.p4_user_id = #{profileId} then 4
						when ua.p5_user_id = #{profileId} then 5 
						when ua.p6_user_id = #{profileId} then 6
						when ua.p7_user_id = #{profileId} then 7
						when ua.p8_user_id = #{profileId} then 8 end as contactsLevel,
			asa.p2_trades_count as pTradesCount, asa.p2_sales_fee as pSalesFee,
			case when ua.p_user_id = #{profileId} then asa.p_offer_fee
						when ua.p2_user_id = #{profileId} then asa.p2_offer_fee
						when ua.p3_user_id = #{profileId} then asa.p3_offer_fee
						when ua.p4_user_id = #{profileId} then asa.p4_offer_fee
						when ua.p5_user_id = #{profileId} then asa.p5_offer_fee end as pOfferFee
			<!-- <choose>
	    		<when test="type != null and type == 1">
	    			,asa.p2_trades_count as pTradesCount, asa.p_offer_fee as pOfferFee, asa.p2_sales_fee as pSalesFee
	    		</when>
	    		<when test="type != null and type == 2">
	    			,asa.p2_trades_count as pTradesCount, asa.p2_offer_fee as pOfferFee, asa.p2_sales_fee as pSalesFee
	    		</when>
	    		<when test="type != null and type == 3">
	    			,asa.p2_trades_count as pTradesCount, asa.p3_offer_fee as pOfferFee, asa.p2_sales_fee as pSalesFee
	    		</when>
	    	</choose> -->

		from Miku_Agency_Share_Account asa
			LEFT JOIN miku_user_agency ua on asa.agency_id = ua.user_id
			LEFT JOIN `profile` pro on asa.agency_id = pro.id
		<where>
			pro.id is not null
			<choose>
	    		<when test="type != null and type == 1 and profileId != null and profileId >0">
	    			and ( ua.p_user_id=#{profileId} )
	    		</when>
	    		<when test="type != null and type == 2 and profileId != null and profileId >0">
	    			and (ua.p2_user_id= #{profileId} or ua.p3_user_id= #{profileId} 
	    				 or ua.p4_user_id= #{profileId} or ua.p5_user_id= #{profileId}
	    				 or ua.p6_user_id= #{profileId} or ua.p7_user_id= #{profileId}
	    				 or ua.p8_user_id= #{profileId}
	    				)
	    		</when>
	    		<when test="type != null and type == 3 and profileId != null and profileId >0">
	    			and (ua.p_user_id=#{profileId} or ua.p2_user_id= #{profileId} or ua.p3_user_id= #{profileId} 
	    				 or ua.p4_user_id= #{profileId} or ua.p5_user_id= #{profileId}
	    				 or ua.p6_user_id= #{profileId} or ua.p7_user_id= #{profileId} or ua.p8_user_id= #{profileId}
	    				)
	    		</when>
	    		
	    		<!-- <when test="type != null and type == 2 and profileId != null and profileId >0">
	    			and ( ua.p2_user_id=#{profileId} )
	    		</when>
	    		<when test="type != null and type == 3 and profileId != null and profileId >0">
	    			and ( ua.p3_user_id=#{profileId} )
	    		</when> -->
	    	</choose>
	    	<if test="nickName != null and nickName != ''">
	    		and (pro.nickname like CONCAT('%','${nickName}','%' ) or pro.mobile like CONCAT('${nickName}','%' ))
	    	</if>
	    	<if test="mobile != null and mobile != ''">
	    		and pro.mobile like CONCAT('${mobile}','%' )
	    	</if>
		</where>
		<if test="orderByClause != null" >
	      order by ${orderByClause}
	    </if>
	    <if test="orderByClause == null" >
	      order by asa.date_created DESC
	    </if>
	    <if test="limit != null" >
	      limit ${limit}
	    </if>
	    <if test="offset != null" >
	      offset ${offset}
	    </if>
	</select>
	
	<!-- 直接间接粉丝人数统计 -->
	<select id="selectAllyByParamCount"  resultType="java.lang.Integer">
		select count(pro.id)
		from Miku_Agency_Share_Account asa
			LEFT JOIN miku_user_agency ua on asa.agency_id = ua.user_id
			LEFT JOIN `profile` pro on asa.agency_id = pro.id
		<where>
			pro.id is not null
			<choose>
	    		<when test="type != null and type == 1 and profileId != null and profileId >0">
	    			and ( ua.p_user_id=#{profileId} )
	    		</when>
	    		<when test="type != null and type == 2 and profileId != null and profileId >0">
	    			and (ua.p2_user_id= #{profileId} or ua.p3_user_id= #{profileId} 
	    				 or ua.p4_user_id= #{profileId} or ua.p5_user_id= #{profileId}
	    				 or ua.p6_user_id= #{profileId} or ua.p7_user_id= #{profileId}
	    				 or ua.p8_user_id= #{profileId}
	    				)
	    		</when>
	    		<when test="type != null and type == 3 and profileId != null and profileId >0">
	    			and (ua.p_user_id=#{profileId} or ua.p2_user_id= #{profileId} or ua.p3_user_id= #{profileId} 
	    				 or ua.p4_user_id= #{profileId} or ua.p5_user_id= #{profileId}
	    				 or ua.p6_user_id= #{profileId} or ua.p7_user_id= #{profileId}
	    				 or ua.p8_user_id= #{profileId}
	    				)
	    		</when>
	    	</choose>
		</where>
	</select>
	
</mapper>