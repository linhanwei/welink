<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.welink.commons.persistence.MikuSalesRecordDOMapper" >
	<resultMap id="BaseResultMapVO" type="com.welink.commons.vo.MikuSalesRecordVO" >
	    <!--
	      WARNING - @mbggenerated
	      This element is automatically generated by MyBatis Generator, do not modify.
	      This element was generated on Fri Jan 15 10:19:35 CST 2016.
	    -->
	    <id column="id" property="id" jdbcType="BIGINT" />
	    <result column="agency_id" property="agencyId" jdbcType="BIGINT" />
	    <result column="agency_level_name" property="agencyLevelName" jdbcType="VARCHAR" />
	    <result column="trade_id" property="tradeId" jdbcType="BIGINT" />
	    <result column="buyer_id" property="buyerId" jdbcType="BIGINT" />
	    <result column="buyer_name" property="buyerName" jdbcType="VARCHAR" />
	    <result column="buyer_mobile" property="buyerMobile" jdbcType="VARCHAR" />
	    <result column="item_id" property="itemId" jdbcType="BIGINT" />
	    <result column="item_name" property="itemName" jdbcType="VARCHAR" />
	    <result column="num" property="num" jdbcType="INTEGER" />
	    <result column="price" property="price" jdbcType="BIGINT" />
	    <result column="amount" property="amount" jdbcType="BIGINT" />
	    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
	    <result column="confirm_date" property="confirmDate" jdbcType="TIMESTAMP" />
	    <result column="return_date" property="returnDate" jdbcType="TIMESTAMP" />
	    <result column="share_fee" property="shareFee" jdbcType="BIGINT" />
	    <result column="parameter" property="parameter" jdbcType="VARCHAR" />
	    <result column="version" property="version" jdbcType="BIGINT" />
	    <result column="date_created" property="dateCreated" jdbcType="TIMESTAMP" />
	    <result column="last_updated" property="lastUpdated" jdbcType="TIMESTAMP" />
	    <result column="is_getpay" property="isGetpay" jdbcType="TINYINT" />
	    <result column="return_status" property="returnStatus" jdbcType="TINYINT" />
	    <result column="timeout_action_time" property="timeoutActionTime" jdbcType="TIMESTAMP" />
	    
	    <result column="item_pic_urls" property="itemPicUrls" jdbcType="VARCHAR" />
	    <result column="tradeStatus" property="tradeStatus" jdbcType="TINYINT" />
	    <result column="contactsLevel" property="contactsLevel" jdbcType="INTEGER" /><!-- 人脉等级 -->
	    <result column="isrefund" property="isrefund" jdbcType="TINYINT" />	<!-- 是否可退货 -->
	    <result column="order_return_status" property="orderReturnStatus" jdbcType="TINYINT" />	<!-- order退货状态 -->
	    <result column="crowdfund_refund_status" property="crowdfundRefundStatus" jdbcType="TINYINT" />	<!-- 众筹退货状态 -->
	    <result column="return_finish_time" property="returnFinishTime" jdbcType="TIMESTAMP" />	<!-- 退货时间 -->
	    
	    
  </resultMap>

  <select id="selectGroupTradeByExample" resultMap="BaseResultMap" parameterType="com.welink.commons.domain.MikuSalesRecordDOExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Oct 31 18:42:49 CST 2015.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <!-- <include refid="Base_Column_List" /> -->
	    id, agency_id, agency_level_name, trade_id, buyer_id, buyer_name, buyer_mobile, item_id, 
	    item_name, sum(num) as num, sum(price) as price, sum(amount) as amount, pay_time, confirm_date, return_date, sum(share_fee) as share_fee, parameter, 
	    version, date_created, last_updated, is_getpay
    from miku_sales_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    group by trade_id
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      limit ${limit}
    </if>
    <if test="offset != null" >
      offset ${offset}
    </if>
  </select>
  
  
  <select id="selectShareGetpay" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    <!-- <include refid="Base_Column_List" /> -->
	    msr.id, msr.agency_id, msr.agency_level_name, msr.trade_id, msr.buyer_id, msr.buyer_name, msr.buyer_mobile, msr.item_id, 
	    msr.item_name, msr.num as num, msr.price as price, msr.amount as amount, msr.pay_time, msr.confirm_date, 
	    msr.return_date, msr.share_fee as share_fee, msr.parameter, 
	    msr.version, msr.date_created, msr.last_updated, msr.is_getpay
    from miku_share_getpay msg
    	left join miku_sales_record msr on msg.sales_record_id = msr.id
    <where>
	    <if test="getpayId != null" >
	    	and msg.getpayId = #{getpayId,jdbcType=BIGINT}
	    </if>
	    <if test="profileId != null" >
	    	and msr.agency_id = #{profileId,jdbcType=BIGINT}
	    </if>
    </where>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      limit ${limit}
    </if>
    <if test="offset != null" >
      offset ${offset}
    </if>
  </select>
  
  <select id="selectSalesRecordList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    <!-- <include refid="Base_Column_List" /> -->
	    msr.id, msr.agency_id, msr.agency_level_name, msr.trade_id, msr.buyer_id, msr.buyer_name, msr.buyer_mobile, msr.item_id, 
	    msr.item_name, msr.num as num, msr.price as price, msr.amount as amount, msr.pay_time, msr.confirm_date, 
	    msr.return_date, msr.share_fee as share_fee, msr.parameter, 
	    msr.version, msr.date_created, msr.last_updated, msr.is_getpay
    from miku_sales_record msr
		LEFT JOIN trade tr on msr.trade_id = tr.trade_id
		LEFT JOIN t_order o on msr.item_id = o.artificial_id and msr.trade_id = o.trade_id
		LEFT JOIN item it on o.artificial_id = it.id
    <where>
	    <if test="profileId != null" >
	    	and msr.agency_id = #{profileId,jdbcType=BIGINT}
	    </if>
	    <choose>
	    	<when test="isCrowdfundRefundStatus != null and isCrowdfundRefundStatus == 0">
	    		<!-- 众筹成功 -->
	    		and tr.crowdfund_refund_status = 3 
	    	</when>
	    	<when test="isCrowdfundRefundStatus != null and isCrowdfundRefundStatus == 1">
	    		<!-- 众筹退款或众筹中的 -->
	    		and tr.crowdfund_refund_status != 3
	    	</when>
	    </choose>
	    <if test="isGetpay != null" >
	    	and msr.is_getpay = #{isGetpay,jdbcType=TINYINT}
	    </if>
	    <if test="timeoutActionTime != null" >
	   	 	and tr.timeout_action_time &lt; #{timeoutActionTime}
	    </if>
	    <choose>
	    	<when test="isReturnGood != null and isReturnGood == 0">
	    		<!-- 没退货 -->
	    		and o.return_status != 5
	    	</when>
	    	<when test="isReturnGood != null and isReturnGood == 1">
	    		<!-- 已退货 -->
	    		and o.return_status = 5
	    	</when>
	    </choose>
	    <!-- <if test="isGetpays != null">
			and msr.is_getpay in
			<foreach collection="isGetpays" item="listItem" index="index" open="(" close=")" separator="," >
              #{listItem}
            </foreach>
		</if> -->
		<choose>
	    	<when test="isCanGetPay != null and isCanGetPay == 0">
	    		<!-- 不可提现包括退货的 -->
	    		<!-- and tr.status != 20 and msr.is_getpay = 1 and tr.crowdfund_refund_status != 0 -->
	    		and ((tr.status != 20  and it.isrefund=1) or o.return_status = 5 or msr.is_getpay not in (-1, 2) or tr.crowdfund_refund_status != 3)
	    	</when>
	    	<when test="isCanGetPay != null and isCanGetPay == 1">
	    		<!-- 可提现 -->
	    		<!-- and (tr.status = 20 or it.isrefund=0) and msr.is_getpay != 1 and tr.crowdfund_refund_status = 0 --> 
	    		and (tr.status = 20 or (tr.status not in (8,9,2,1) and it.isrefund=0)) and msr.is_getpay in (-1, 2) and o.return_status != 5 and tr.crowdfund_refund_status = 3
	    	</when>
	    	<when test="isCanGetPay != null and isCanGetPay == 2">
	    		<!-- 余额中的不可提现 -->
	    		<!-- and (tr.status = 20 or it.isrefund=0) and msr.is_getpay != 1 and tr.crowdfund_refund_status = 0 --> 
	    		and tr.status not in (20,8,9,2,1) and it.isrefund=1 and msr.is_getpay in (-1, 2) and o.return_status != 5 and tr.crowdfund_refund_status in (0,3)
	    	</when>
	    	<when test="isCanGetPay != null and isCanGetPay == 3">
	    		<!-- 余额 -->
	    		and tr.status not in (8,9,2,1) and msr.is_getpay in (-1, 2) and o.return_status != 5 and tr.crowdfund_refund_status in (0,3)
	    	</when>
	    </choose>
	    <if test="tradeStatus != null" >
	    	and (tr.status = #{tradeStatus,jdbcType=TINYINT})
	    </if>
	    
    </where>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      limit ${limit}
    </if>
    <if test="offset != null" >
      offset ${offset}
    </if>
  </select>
  
  <select id="selectSalesRecordVOList" resultMap="BaseResultMapVO" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    <!-- <include refid="Base_Column_List" /> -->
	    msr.id, msr.agency_id, msr.agency_level_name, msr.trade_id, msr.buyer_id, msr.buyer_name, msr.buyer_mobile, msr.item_id, 
	    msr.item_name, msr.num as num, msr.price as price, msr.amount as amount, msr.pay_time, msr.confirm_date, 
	    msr.return_date, msr.share_fee as share_fee, msr.parameter, 
	    msr.version, msr.date_created, msr.last_updated, msr.is_getpay, tr.status as tradeStatus,
	    it.isrefund as isrefund, it.pic_urls as item_pic_urls,
	    o.return_status as order_return_status, tr.crowdfund_refund_status as crowdfund_refund_status
    from miku_sales_record msr
		LEFT JOIN trade tr on msr.trade_id = tr.trade_id
		LEFT JOIN t_order o on msr.item_id = o.artificial_id and msr.trade_id = o.trade_id
		LEFT JOIN item it on o.artificial_id = it.id
    <where>
	    <if test="profileId != null" >
	    	and msr.agency_id = #{profileId,jdbcType=BIGINT}
	    </if>
	    <if test="isGetpay != null" >
	    	and msr.is_getpay = #{isGetpay,jdbcType=TINYINT}
	    </if>
		<choose>
	    	<when test="isCanGetPay != null and isCanGetPay == 0">
	    		<!-- 不可提现 -->
	    		<!-- and tr.status != 20 and msr.is_getpay = 1 and tr.crowdfund_refund_status != 0 -->
	    		and ((tr.status != 20  and it.isrefund=1) or o.return_status = 5 or msr.is_getpay not in (-1, 2) or tr.crowdfund_refund_status != 3)
	    	</when>
	    	<when test="isCanGetPay != null and isCanGetPay == 1">
	    		<!-- 可提现 -->
	    		<!-- and (tr.status = 20 or it.isrefund=0) and msr.is_getpay != 1 and tr.crowdfund_refund_status = 0 --> 
	    		and (tr.status = 20 or (tr.status not in (8,9,2,1) and it.isrefund=0)) and msr.is_getpay in (-1, 2) and o.return_status != 5 and tr.crowdfund_refund_status = 3
	    	</when>
	    	<when test="isCanGetPay != null and isCanGetPay == 2">
	    		<!-- 余额中的不可提现 -->
	    		<!-- and (tr.status = 20 or it.isrefund=0) and msr.is_getpay != 1 and tr.crowdfund_refund_status = 0 --> 
	    		and tr.status not in (20,8,9,2,1) and it.isrefund=1 and msr.is_getpay in (-1, 2) and o.return_status != 5 and tr.crowdfund_refund_status in (0,3)
	    	</when>
	    	<when test="isCanGetPay != null and isCanGetPay == 3">
	    		<!-- 余额 -->
	    		and tr.status not in (8,9,2,1) and msr.is_getpay in (-1, 2) and o.return_status != 5 and tr.crowdfund_refund_status in (0,3)
	    	</when>
	    </choose>
    </where>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      limit ${limit}
    </if>
    <if test="offset != null" >
      offset ${offset}
    </if>
  </select>
  
  <select id="selectSalesRecordGroupByTradeList" resultMap="BaseResultMapVO" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    <!-- <include refid="Base_Column_List" /> -->
	    msr.id, msr.agency_id, msr.agency_level_name, msr.trade_id, msr.buyer_id, msr.buyer_name, msr.buyer_mobile, msr.item_id, 
	    msr.item_name, sum(msr.num) as num, sum(msr.price) as price, sum(msr.amount) as amount, msr.pay_time, msr.confirm_date, 
	    msr.return_date, sum(msr.share_fee) as share_fee, msr.parameter, 
	    msr.version, msr.date_created, msr.last_updated, msr.is_getpay, tr.status as tradeStatus,
	    it.isrefund as isrefund, it.pic_urls as item_pic_urls,
	    o.return_status as order_return_status, tr.crowdfund_refund_status as crowdfund_refund_status
    from miku_sales_record msr
		LEFT JOIN trade tr on msr.trade_id = tr.trade_id
		LEFT JOIN t_order o on msr.item_id = o.artificial_id and msr.trade_id = o.trade_id
		LEFT JOIN item it on o.artificial_id = it.id
		<!-- LEFT JOIN miku_user_agency ua on msr.buyer_id = ua.user_id -->
    <where>
	    <if test="profileId != null" >
	    	and msr.agency_id = #{profileId,jdbcType=BIGINT}
	    </if>
	    <if test="isGetpay != null" >
	    	and msr.is_getpay = #{isGetpay,jdbcType=TINYINT}
	    </if>
	    <!-- <choose>
	    	<when test="isCrowdfundRefundStatus != null and isCrowdfundRefundStatus == 0">
	    		众筹成功的
	    		and tr.crowdfund_refund_status = 3 
	    	</when>
	    	<when test="isCrowdfundRefundStatus != null and isCrowdfundRefundStatus == 1">
	    		众筹退款或众筹中的 
	    		and tr.crowdfund_refund_status != 3
	    	</when>
	    </choose> -->
	    <choose>
	    	<when test="isCanGetPay != null and isCanGetPay == 0">
	    		<!-- 不可提现 -->
	    		<!-- and (tr.status != 20 and msr.is_getpay = 1 and tr.crowdfund_refund_status != 3) or o.return_status = 5  -->
	    		and ((tr.status != 20  and it.isrefund=1) or o.return_status = 5 or msr.is_getpay not in (-1, 2) or tr.crowdfund_refund_status != 3) 
	    	</when>
	    	<when test="isCanGetPay != null and isCanGetPay == 1">
	    		<!-- 可提现 -->
	    		and (tr.status = 20 or (tr.status not in (8,9,2,1) and it.isrefund=0)) and msr.is_getpay in (-1, 2) and o.return_status != 5 and tr.crowdfund_refund_status = 3 
	    	</when>
	    	<when test="isCanGetPay != null and isCanGetPay == 2">
	    		<!-- 余额中的不可提现 -->
	    		<!-- and (tr.status = 20 or it.isrefund=0) and msr.is_getpay != 1 and tr.crowdfund_refund_status = 0 --> 
	    		and tr.status not in (20,8,9,2,1) and it.isrefund=1 and msr.is_getpay in (-1, 2) and o.return_status != 5 and tr.crowdfund_refund_status in (0,3)
	    	</when>
	    	<when test="isCanGetPay != null and isCanGetPay == 3">
	    		<!-- 余额 -->
	    		and tr.status not in (8,9,2,1) and msr.is_getpay in (-1, 2) and o.return_status != 5 and tr.crowdfund_refund_status in (0,3)
	    	</when>
	    </choose>
	    <if test="isGetpays != null">
			and msr.is_getpay in
			<foreach collection="isGetpays" item="listItem" index="index" open="(" close=")" separator="," >
              #{listItem}
            </foreach>
		</if>
	    <!-- <choose>
	    	<when test="isReturnGood != null and isReturnGood == 0">
	    		没退货
	    		and o.return_status != 5
	    	</when>
	    	<when test="isReturnGood != null and isReturnGood == 1">
	    		已退货
	    		and o.return_status = 5
	    	</when>
	    </choose> -->
	    <if test="tradeStatus != null" >
	    	and tr.status = #{tradeStatus,jdbcType=TINYINT}
	    </if>
    </where>
    group by msr.trade_id
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      limit ${limit}
    </if>
    <if test="offset != null" >
      offset ${offset}
    </if>
  </select>
  
  <select id="selectReturnProfitOrderList" resultMap="com.welink.commons.persistence.OrderMapper.BaseResultMap">
  	<!-- 查找需退分润的订单列表 -->
    select
    <if test="distinct" >
      distinct
    </if>
    <!-- <include refid="Base_Column_List" /> -->
	    o.*
    from trade tr
		LEFT JOIN t_order o on tr.trade_id = o.trade_id
    <where>
	    <!-- tr.status = 20 and  -->
	    (tr.crowdfund_refund_status = 1 or tr.crowdfund_refund_status = 2
		or o.return_status = 5)
		and o.is_return_profit = 0
    </where>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      limit ${limit}
    </if>
    <if test="offset != null" >
      offset ${offset}
    </if>
  </select>
  
  <select id="getReturnSaleRecordVOList" resultMap="BaseResultMapVO" parameterType="java.util.Map" >
    select
    <if test="distinct" >
      distinct
    </if>
    	p.mobile, IFNULL(p.nickname, '') as nickname,
    	<!-- , rg.finish_time as return_finish_time,  -->
    	sr.agency_id, sr.item_id, sr.item_name, sr.trade_id, sr.share_fee as share_fee,sr.return_date,
    	o.pic_url as item_pic_urls,
		case when ua.p_user_id = sr.agency_id then 1
						when ua.p2_user_id = sr.agency_id then 2
						when ua.p3_user_id = sr.agency_id then 3
						when ua.p4_user_id = sr.agency_id then 4
						when ua.p5_user_id = sr.agency_id then 5 
						when ua.p6_user_id = sr.agency_id then 6
						when ua.p7_user_id = sr.agency_id then 7
						when ua.p8_user_id = sr.agency_id then 8 
						else -1 end as contactsLevel
	from miku_sales_record sr
	LEFT JOIN `profile` p on sr.buyer_id = p.id
	LEFT JOIN miku_user_agency ua on p.id = ua.user_id
	LEFT JOIN t_order o on sr.item_id = o.artificial_id and sr.trade_id = o.trade_id
	<!-- LEFT JOIN miku_return_goods rg on sr.trade_id = rg.trade_id and sr.item_id = rg.artificial_id -->
	<where>
		sr.return_status = 5
		<if test="profileId != null and profileId > 0">
			and sr.agency_id = #{profileId,jdbcType=BIGINT}
		</if>
	</where>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      limit ${limit}
    </if>
    <if test="offset != null" >
      offset ${offset}
    </if>
   </select>
   
   <!-- <select id="sumReturnSaleRecord" parameterType="java.util.Map"  resultType="java.lang.Integer" >
    select  IFNULL(sum(sr.share_fee), '0') as shareFee count(*)
	from miku_sales_record sr
	LEFT JOIN `profile` p on sr.buyer_id = p.id
	LEFT JOIN miku_user_agency ua on p.id = ua.user_id
	<where>
		sr.return_status = 5
		<if test="profileId != null and profileId > 0">
			and sr.agency_id = #{profileId,jdbcType=BIGINT}
		</if>
	</where>
   </select> -->
   
   <select id="sumReturnSaleRecord" parameterType="java.util.Map" resultType="java.lang.Long" >
    select IFNULL(sum(sr.share_fee), '0') 
    from miku_sales_record sr
    <where>
    	sr.return_status = 5
    	<if test="profileId != null and profileId > 0">
			and sr.agency_id = #{profileId,jdbcType=BIGINT}
		</if>
    </where>
  </select>
  
  
</mapper>